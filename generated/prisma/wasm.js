
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CharacterScalarFieldEnum = {
  id: 'id',
  name: 'name',
  role: 'role',
  description: 'description',
  foxp2Pattern: 'foxp2Pattern',
  currentMood: 'currentMood',
  memoryBank: 'memoryBank',
  routines: 'routines',
  actions: 'actions',
  imageUrl: 'imageUrl',
  isActive: 'isActive',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ConversationScalarFieldEnum = {
  id: 'id',
  title: 'title',
  type: 'type',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  isActive: 'isActive',
  sessionData: 'sessionData'
};

exports.Prisma.MessageScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  characterId: 'characterId',
  content: 'content',
  type: 'type',
  metadata: 'metadata',
  messageOrder: 'messageOrder',
  timestamp: 'timestamp'
};

exports.Prisma.ConversationParticipantScalarFieldEnum = {
  id: 'id',
  conversationId: 'conversationId',
  characterId: 'characterId',
  joinedAt: 'joinedAt',
  isActive: 'isActive',
  lastSeen: 'lastSeen'
};

exports.Prisma.SessionScalarFieldEnum = {
  id: 'id',
  sessionData: 'sessionData',
  currentConversationId: 'currentConversationId',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  lastActivity: 'lastActivity',
  isActive: 'isActive'
};

exports.Prisma.CharacterRoleScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  actions: 'actions',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.ActionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  effects: 'effects',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.MemoryTemplateScalarFieldEnum = {
  id: 'id',
  heading: 'heading',
  content: 'content',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.CharacterMemoryScalarFieldEnum = {
  id: 'id',
  characterId: 'characterId',
  content: 'content',
  context: 'context',
  importance: 'importance',
  createdAt: 'createdAt'
};

exports.Prisma.RoomScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  maxMembers: 'maxMembers',
  isActive: 'isActive',
  createdBy: 'createdBy',
  metadata: 'metadata',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.RoomMemberScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  characterId: 'characterId',
  joinedAt: 'joinedAt',
  isActive: 'isActive',
  role: 'role',
  lastSeen: 'lastSeen'
};

exports.Prisma.RoomMessageScalarFieldEnum = {
  id: 'id',
  roomId: 'roomId',
  characterId: 'characterId',
  content: 'content',
  type: 'type',
  metadata: 'metadata',
  messageOrder: 'messageOrder',
  timestamp: 'timestamp'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  Character: 'Character',
  Conversation: 'Conversation',
  Message: 'Message',
  ConversationParticipant: 'ConversationParticipant',
  Session: 'Session',
  CharacterRole: 'CharacterRole',
  Action: 'Action',
  MemoryTemplate: 'MemoryTemplate',
  CharacterMemory: 'CharacterMemory',
  Room: 'Room',
  RoomMember: 'RoomMember',
  RoomMessage: 'RoomMessage'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/prasmurali/projects/FOXP2/generated/prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "darwin-arm64",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/Users/prasmurali/projects/FOXP2/prisma/schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Character {\n  id           String   @id\n  name         String\n  role         String\n  description  String?\n  foxp2Pattern String // JSON string\n  currentMood  Float    @default(0.5)\n  memoryBank   String   @default(\"[]\") // JSON string\n  routines     String   @default(\"[]\") // JSON string  \n  actions      String   @default(\"[]\") // JSON string\n  imageUrl     String?\n  isActive     Boolean  @default(true)\n  createdAt    DateTime @default(now())\n  updatedAt    DateTime @updatedAt\n\n  // Relations\n  messages     Message[]\n  participants ConversationParticipant[]\n  memories     CharacterMemory[]\n  roomMembers  RoomMember[]\n  roomMessages RoomMessage[]\n\n  @@map(\"characters\")\n}\n\nmodel Conversation {\n  id          String   @id\n  title       String?\n  type        String   @default(\"playground\")\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n  isActive    Boolean  @default(true)\n  sessionData String   @default(\"{}\") // JSON string\n\n  // Relations\n  messages     Message[]\n  participants ConversationParticipant[]\n\n  @@map(\"conversations\")\n}\n\nmodel Message {\n  id             String   @id\n  conversationId String\n  characterId    String?\n  content        String\n  type           String   @default(\"chat\")\n  metadata       String   @default(\"{}\") // JSON string\n  messageOrder   Int\n  timestamp      DateTime @default(now())\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  character    Character?   @relation(fields: [characterId], references: [id], onDelete: SetNull)\n\n  @@map(\"messages\")\n}\n\nmodel ConversationParticipant {\n  id             String   @id\n  conversationId String\n  characterId    String\n  joinedAt       DateTime @default(now())\n  isActive       Boolean  @default(true)\n  lastSeen       DateTime @default(now())\n\n  // Relations\n  conversation Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)\n  character    Character    @relation(fields: [characterId], references: [id], onDelete: Cascade)\n\n  @@unique([conversationId, characterId])\n  @@map(\"conversation_participants\")\n}\n\nmodel Session {\n  id                    String   @id\n  sessionData           String   @default(\"{}\")\n  currentConversationId String?\n  createdAt             DateTime @default(now())\n  updatedAt             DateTime @updatedAt\n  lastActivity          DateTime @default(now())\n  isActive              Boolean  @default(true)\n\n  @@map(\"sessions\")\n}\n\nmodel CharacterRole {\n  id          String   @id\n  name        String   @unique\n  description String\n  actions     String   @default(\"[]\") // JSON string\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"character_roles\")\n}\n\nmodel Action {\n  id          String   @id\n  name        String   @unique\n  description String\n  effects     String   @default(\"[]\") // JSON string\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  @@map(\"actions\")\n}\n\nmodel MemoryTemplate {\n  id        String   @id\n  heading   String   @unique\n  content   String\n  createdAt DateTime @default(now())\n  updatedAt DateTime @updatedAt\n\n  @@map(\"memory_templates\")\n}\n\nmodel CharacterMemory {\n  id          String   @id\n  characterId String\n  content     String\n  context     String   @default(\"{}\")\n  importance  Float    @default(0.5)\n  createdAt   DateTime @default(now())\n\n  // Relations\n  character Character @relation(fields: [characterId], references: [id], onDelete: Cascade)\n\n  @@map(\"character_memories\")\n}\n\nmodel Room {\n  id          String   @id\n  name        String\n  description String?\n  maxMembers  Int      @default(10)\n  isActive    Boolean  @default(true)\n  createdBy   String?\n  metadata    String   @default(\"{}\") // JSON string for room settings\n  createdAt   DateTime @default(now())\n  updatedAt   DateTime @updatedAt\n\n  // Relations\n  members  RoomMember[]\n  messages RoomMessage[]\n\n  @@map(\"rooms\")\n}\n\nmodel RoomMember {\n  id          String   @id\n  roomId      String\n  characterId String\n  joinedAt    DateTime @default(now())\n  isActive    Boolean  @default(true)\n  role        String   @default(\"member\") // member, moderator, admin\n  lastSeen    DateTime @default(now())\n\n  // Relations\n  room      Room      @relation(fields: [roomId], references: [id], onDelete: Cascade)\n  character Character @relation(fields: [characterId], references: [id], onDelete: Cascade)\n\n  @@unique([roomId, characterId])\n  @@map(\"room_members\")\n}\n\nmodel RoomMessage {\n  id           String   @id\n  roomId       String\n  characterId  String?\n  content      String\n  type         String   @default(\"chat\") // chat, system, action\n  metadata     String   @default(\"{}\") // JSON string\n  messageOrder Int\n  timestamp    DateTime @default(now())\n\n  // Relations\n  room      Room       @relation(fields: [roomId], references: [id], onDelete: Cascade)\n  character Character? @relation(fields: [characterId], references: [id], onDelete: SetNull)\n\n  @@map(\"room_messages\")\n}\n",
  "inlineSchemaHash": "587d3dcf8693d2665c809ca570ae4afc8e6866098438228b4b9c6684e44bf29b",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Character\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"foxp2Pattern\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentMood\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"memoryBank\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"routines\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"imageUrl\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"CharacterToMessage\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"CharacterToConversationParticipant\"},{\"name\":\"memories\",\"kind\":\"object\",\"type\":\"CharacterMemory\",\"relationName\":\"CharacterToCharacterMemory\"},{\"name\":\"roomMembers\",\"kind\":\"object\",\"type\":\"RoomMember\",\"relationName\":\"CharacterToRoomMember\"},{\"name\":\"roomMessages\",\"kind\":\"object\",\"type\":\"RoomMessage\",\"relationName\":\"CharacterToRoomMessage\"}],\"dbName\":\"characters\"},\"Conversation\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"sessionData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"Message\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"participants\",\"kind\":\"object\",\"type\":\"ConversationParticipant\",\"relationName\":\"ConversationToConversationParticipant\"}],\"dbName\":\"conversations\"},\"Message\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"characterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToMessage\"},{\"name\":\"character\",\"kind\":\"object\",\"type\":\"Character\",\"relationName\":\"CharacterToMessage\"}],\"dbName\":\"messages\"},\"ConversationParticipant\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"conversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"characterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"conversation\",\"kind\":\"object\",\"type\":\"Conversation\",\"relationName\":\"ConversationToConversationParticipant\"},{\"name\":\"character\",\"kind\":\"object\",\"type\":\"Character\",\"relationName\":\"CharacterToConversationParticipant\"}],\"dbName\":\"conversation_participants\"},\"Session\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"sessionData\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currentConversationId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"lastActivity\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":\"sessions\"},\"CharacterRole\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"actions\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"character_roles\"},\"Action\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"effects\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"actions\"},\"MemoryTemplate\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"heading\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":\"memory_templates\"},\"CharacterMemory\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"characterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"context\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"importance\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"character\",\"kind\":\"object\",\"type\":\"Character\",\"relationName\":\"CharacterToCharacterMemory\"}],\"dbName\":\"character_memories\"},\"Room\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"maxMembers\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdBy\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"members\",\"kind\":\"object\",\"type\":\"RoomMember\",\"relationName\":\"RoomToRoomMember\"},{\"name\":\"messages\",\"kind\":\"object\",\"type\":\"RoomMessage\",\"relationName\":\"RoomToRoomMessage\"}],\"dbName\":\"rooms\"},\"RoomMember\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"characterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"joinedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"role\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastSeen\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomMember\"},{\"name\":\"character\",\"kind\":\"object\",\"type\":\"Character\",\"relationName\":\"CharacterToRoomMember\"}],\"dbName\":\"room_members\"},\"RoomMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"roomId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"characterId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"content\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"metadata\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"messageOrder\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"timestamp\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"room\",\"kind\":\"object\",\"type\":\"Room\",\"relationName\":\"RoomToRoomMessage\"},{\"name\":\"character\",\"kind\":\"object\",\"type\":\"Character\",\"relationName\":\"CharacterToRoomMessage\"}],\"dbName\":\"room_messages\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

